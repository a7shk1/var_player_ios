# ios/Podfile

platform :ios, '13.0'
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. Run `flutter pub get` first."
  end
  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in: #{generated_xcode_build_settings_path}"
end

# يستورد podhelper من نسخة Flutter المُستخدمة في بيئة البناء
require File.expand_path(File.join(flutter_root, 'packages', 'flutter_tools', 'bin', 'podhelper'), __FILE__)

# إعدادات Flutter الافتراضية للبودات
flutter_ios_podfile_setup

target 'Runner' do
  # بعض إضافات Flutter تحتاج هالسطرين:
  use_frameworks!
  use_modular_headers!

  # تثبيت كل بودات Flutter
  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))

  # إذا احتجت لاحقاً Pods/Subspecs إضافية (مثل permissions) أضفها هنا.
end

# تعديلات بعد تثبيت البودات
post_install do |installer|
  # أولاً: إصلاحات Flutter الرسمية (Xcode 15/16…)
  flutter_post_install(installer) if defined?(flutter_post_install)

  # ثانياً: تثبيت Target = iOS 13.0 على كل البودات لتفادي تعارض النسخ
  installer.pods_project.targets.each do |target|
    target.build_configurations.each do |config|
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '13.0'
    end
  end
end
